export const CONFIG = {
  // OpenAI Configuration
  OPENAI_API_KEY:
    "REMOVED_API_KEY",
  OPENAI_MODEL: "gpt-3.5-turbo",
  OPENAI_MAX_TOKENS: 800,
  OPENAI_TEMPERATURE: 0.2,

  // Google Sheets Configuration
  GOOGLE_SERVICE_ACCOUNT_EMAIL: "finzei@finzei.iam.gserviceaccount.com",
  GOOGLE_PRIVATE_KEY: `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCuCElv2491cl/T
1aw8dzSYA8TnLk7Kb2VWeADqAauKfhFN5AkwFBCsBrKsDlAIrt4tmekRLp7nVJS+
BSdr1J+aaZ4pQ2ixKoWHb/bkjgDSvOyPdwF5A21+3g2Anxup8feoeBgDWrXnu4nj
gX1Vzxwt1uy7jzecj6UaNIzigtMT1h57bkON4/FFFtXcyyE316O7cMSwfP+Zl/fP
ef6HloztaCcmwBjnb/SgYvIdeP57G1zvBh7QxeSB/fi1q+fLhuxgfFu3GpVaz2Uv
TMBkKBFharqrTlULvAmpksz3hiwcYlN5yiG3ZX7SCqck7zgvqYsalu+UtLZP7Xar
ldTRVhy9AgMBAAECggEAI61Uur742bOtE/0PnmS0rj5FkTwj0GnGTVP0IgTeIRnn
m792J7pRUabc3Ztgimso5pHRHyHe1x82j/73/incX1gsIZrtXTaRobqRE3lOD2XG
HEIiFegfPB0zCO11SyFs60dVauifdoZyheaPpnX7OaWAKhI57RlgmC7yO+Rkd8H8
rDPDN7rJ+lhHGC80Myl2FK8HHkMtJYvYbfDnYo+fAOwomGB6dBhk7wOBHPMf7UAK
no8JioqhCbLzYZ82LjYobQrkeSC33SJgx8GYxkqgmu3Nu3p0FHgYhRlLTygodVjl
k4/xovIEXbOOuzUdyLI2q3Sw/QxwxPlVHtZJ0s4hSQKBgQDavgcLfS9reoNFPlma
kiFEi3/ENFraMiLgSsvU5BrADwt439OYXvkj1K4WLphAF7Agkyc+//W3tGy/8jo5
8ykh5O7bjWmfcefseBqo6Ca9p0GKwASjb1nv8OQw/RtVyBqMBDvZ6FiOKJ3uCw7D
jjQKe89PXNHQDCudJtagCTjryQKBgQDLrL3MetGYefA0HZK8MoaX2ibhwRSpgPPH
q5ods6Q97UEzBL3tTHXJP0gm0BYX7pGUlCAnECuhL3zhMqJLlo5DOeswyqPFNuTQ
qcYzXPBdqvAtocg7jmwrwK3NHZP39v43bGF3NC7xAClcyE7Y3qR/bk2rZg02j7S4
LMn6dZS7VQKBgQDSuaQRxlyLXu/dIg6yILqZzQWd343yi8AbcRLiGYlHona70GyI
al36zaWTyvlzLR7IktqJD44IlnD5jQHY1861T1Vn/thU+SejH6UXOOYxaFJ0tz0A
sYHj6535L6xIvEgOwPljmDjPYoOaUd68N18dBl8Vpmad1UuizkqOy7OhOQKBgDi5
JzLnka/xZeBdzBv1xl5MNz/wUhzS+RHGzOkwurE0flADJhIMlVEy+pk0orKPkqPa
jQnUCxKc8x6Ux3Zdu8klPEceaHXoT9l9LuHnJFox3SoYQHe1tpKI2t6hOjB47Vvq
J0rXkas07FAWyT7E4vNKeP8fMNbdNuuELcw/KujxAoGAUZtRAQUXj4oTU/Qjr17G
gICtvYkx0uIrBPIhb0xR2bHmEdoDxFCI/iwqWGQ4gAWpBPm/6tI34wNsZTbaNTi7
AhHnwlOvteBGU+ZUvqMl7jc/m5zx3TRGPe6QS2cvgx+O0tsBrdYgJZ/cL1Dy00FW
7ZhDcoXC5KMjjiJ+U9EyOaI=
-----END PRIVATE KEY-----`,
  SPREADSHEET_ID: "1ECt9OlsPsB5PSX0JDMQ_Io-nXdM3DPyXxEIFMrdeqTs",

  // Column mappings for Google Sheets
  COLUMNS: {
    TIMESTAMP: 0, // A - Timestamp (auto-generated by Google Forms)
    NAME: 1, // B - Name
    EMAIL: 2, // C - Email
    PORTFOLIO: 3, // D - Portfolio Link
    RESUME: 4, // E - Resume File
    PROPOSAL: 5, // F - Proposal
    GITHUB: 6, // G - GitHub Link
    RATING: 7, // H - Rating (AI fills this)
  },

  // Scraping Configuration
  MAX_PORTFOLIO_CHARS: 3000,
  MAX_PROPOSAL_CHARS: 2000,
  SCRAPING_TIMEOUT: 15000,
  FETCH_TIMEOUT: 10000,
  MAX_RESUME_SIZE: 10 * 1024 * 1024, // 10MB
  SUPPORTED_FILE_TYPES: ["pdf", "docx"],
  USER_AGENT: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",

  // Rate Limiting
  RATE_LIMIT_REQUESTS: 100,
  RATE_LIMIT_WINDOW: 15 * 60 * 1000, // 15 minutes

  // Processing Configuration
  PROCESSING_DELAY: 2000, // 2 seconds between requests
  MAX_RETRIES: 3,

  // Debug Configuration
  DEBUG_MODE: true, // Set to false in production
  LOG_LEVEL: "info", // "debug", "info", "warn", "error"
} as const

// Add a function to check if OpenAI is configured
export function isOpenAIConfigured(): boolean {
  return !!CONFIG.OPENAI_API_KEY && CONFIG.OPENAI_API_KEY.startsWith("sk-")
}

// Add a function to check if Google Sheets is configured
export function isGoogleSheetsConfigured(): boolean {
  return !!(
    CONFIG.SPREADSHEET_ID &&
    CONFIG.GOOGLE_SERVICE_ACCOUNT_EMAIL &&
    CONFIG.GOOGLE_PRIVATE_KEY &&
    CONFIG.GOOGLE_PRIVATE_KEY.includes("BEGIN PRIVATE KEY")
  )
}

// Add a function to validate the configuration
export function validateConfig(): { valid: boolean; errors: string[] } {
  const errors: string[] = []

  if (!isOpenAIConfigured()) {
    errors.push("OpenAI API key is missing or invalid")
  }

  if (!isGoogleSheetsConfigured()) {
    errors.push("Google Sheets configuration is incomplete")
  }

  if (!CONFIG.SPREADSHEET_ID) {
    errors.push("Spreadsheet ID is missing")
  }

  return {
    valid: errors.length === 0,
    errors,
  }
}

// Log configuration status (for debugging)
if (typeof window === "undefined") {
  // Only run on server side
  const configStatus = validateConfig()
  console.log("üîß Configuration Status:")
  console.log(`  OpenAI: ${isOpenAIConfigured() ? "‚úÖ Configured" : "‚ùå Missing"}`)
  console.log(`  Google Sheets: ${isGoogleSheetsConfigured() ? "‚úÖ Configured" : "‚ùå Missing"}`)
  console.log(`  Spreadsheet ID: ${CONFIG.SPREADSHEET_ID ? "‚úÖ Set" : "‚ùå Missing"}`)

  if (!configStatus.valid) {
    console.error("‚ùå Configuration errors:", configStatus.errors)
  } else {
    console.log("‚úÖ All configurations are valid")
  }
}
